set shell sh
set shellopts '-eu'

set ifs "\n"
set dircounts
set icons
set ignorecase
set incsearch
set info size
set nohidden
set number
set ratios 3:2
set relativenumber
set scrolloff 10

set previewer ~/.config/lf/preview
set cleaner ~/.config/lf/cleaner
reload

map <enter> shell

map e $$EDITOR $f
map E $sudo -E $EDITOR $f

map sn :set sortby natural; set info; set noreverse
map ss :set sortby size; set info size; set reverse
map st :set sortby time; set info time; set reverse
map sa :set sortby atime; set info atime; set reverse
map sc :set sortby ctime; set info ctime; set reverse
map se :set sortby ext; set info; set noreverse

map r
map ra :rename_logic focus-name
map rc :rename_logic clear-name
map ri :rename_logic focus-start
map rA :rename_logic focus-end
map rC :rename_logic clear
map re $printf '%s\n' $fx | vidir -

map c
map cd push :mkdir<space>
map cf push :touch<space>
map cF push &$EDITOR<space>
map cm chmod

map m
map md push :mkdir<space>
map mf push :touch<space>
map mF push &$EDITOR<space>

map S symlink
map D trash
map L open_and_exit
map w
map t open_file_explorer
map sd set_default
map sw set_wallpaper
map sf fzf
map sl push :rg<space>

map gr cd /
map gC cd ~/.config/
map gdc cd ~/Documents
map gdw cd ~/Downloads
map gcl cd ~/.config/lf
map gcb cd ~/.config/bspwm/
map gcs cd ~/.config/sxhkd/
map gcz cd ~/.config/zsh/
map gcd cd ~/.config/dotfiles/
map gcp cd ~/.config/polybar/
map gcn cd ~/.config/nvim
map gus cd /usr/share
map gul cd /usr/local
map gub cd /usr/bin
map gvl cd /var/log
map gs cd ~/Documents/scripts
map gb cd /bin/
map ge cd /etc/
map gp cd ~/Pictures
map gU cd /usr/
map gV cd /var/
map gmn cd /mnt
map gme cd /run/media/llday

map git $lazygit

cmd trash %trash-put $fx

cmd rename_logic &{{
    lf -remote "send $id :rename"
    if [ -f $f ]; then
        case $1 in
            "focus-name")
                lf -remote "send $id :cmd-word-back; cmd-left"
            ;;
            "clear-name")
                lf -remote "send $id :cmd-word-back; cmd-left; cmd-delete-home"
            ;;
        esac
    else
        case $1 in
            "clear-name")
                lf -remote "send $id :cmd-delete-home"
            ;;
        esac
    fi

    case $1 in
        "focus-start")
            lf -remote "send $id :cmd-home"
        ;;
        "clear")
            lf -remote "send $id :cmd-delete-home"
        ;;
        esac
}}

cmd open &{{
    case "$f" in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2|*.tar.gz|*.tgz|*.tar.xz|*.txz|*.zip|*.rar|*.iso)
            mntdir="$f-archivemount"
            [ ! -d "$mntdir" ] && {
                mkdir "$mntdir"
                archivemount "$f" "$mntdir" -o nobackup
                echo "$mntdir" >> "/tmp/__lf_archivemount_$id"
            }
            lf -remote "send $id cd \"$mntdir\""
            lf -remote "send $id reload"
            ;;
        *)
            for f in $fx; do
                setsid $OPENER "$f" > /dev/null 2> /dev/null &
            done;;
    esac
}}

cmd open_and_exit &{{
    touch "/tmp/__lf_exit__"$id""
    lf -remote "send $id open"
    lf -remote "send $id quit"
}}

cmd set_default $setsid mimeopen -d $f 2>/dev/null

cmd open_file_explorer &{{
    touch "/tmp/__lf_exit__"$id""
    setsid $OPENER $(pwd) &>/dev/null &
    lf -remote "send $id quit"
}}

cmd mkdir &{{
    mkdir $1
    lf -remote "send $id reload"
}}

cmd touch &{{
    touch $1
    lf -remote "send $id reload"
}}

cmd fzf ${{
    res=$(rg --files | fzf --reverse --header='Jump to location' \
        --preview "bat {}")
    if [ -f "$res" ]; then
        cmd="select"
    elif [ -d "$res" ]; then
         cmd="cd"
    fi
    lf -remote "send $id $cmd \"$res\""
}}

cmd rg ${{
    res=$(rg --hidden -ilwL $1 | fzf --header='Jump to location' \
        --preview "bat {} | rg --color always -B3 -A3 $1")
    if [ -f "$res" ]; then
        cmd="select"
    elif [ -d "$res" ]; then
         cmd="cd"
    fi
    lf -remote "send $id $cmd \"$res\""
}}

cmd chmod %{{
    set -f
    ls -lH --color=never $f | awk '{print $9,"("$1"):"}'
    read mod
    chmod "$mod" $f
    lf -remote "send $id reload"
}}

cmd set_wallpaper &{{
    swww img $f
}}

cmd symlink %{{
    load=$(lf -remote "load $id")
    mode=$(echo "$load" | sed -n '1p')
    list=$(echo "$load" | sed '1d')
    if [ $mode = 'copy' ]; then
        ln -s $list .
        lf -remote "send $id clear"
    fi
    lf -remote "send $id load"
}}

cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}
